import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:qr_flutter/qr_flutter.dart';
import 'qr_code_data.dart';
import 'qr_code_provider.dart';

class ProfileDialog {
  static void show(BuildContext context, QRCodeProvider qrCodeProvider) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return ProfileDialogWidget(qrCodeProvider: qrCodeProvider);
      },
    );
  }
}

class ProfileDialogWidget extends StatefulWidget {
  final QRCodeProvider qrCodeProvider;

  const ProfileDialogWidget({Key? key, required this.qrCodeProvider})
      : super(key: key);

  @override
  State<ProfileDialogWidget> createState() => _ProfileDialogWidgetState();
}

class _ProfileDialogWidgetState extends State<ProfileDialogWidget> {
  // Those will be replaced by real data based on login sessions
  final String username = 'Test User';
  final String email = 'test@user.com';

  @override
  Widget build(BuildContext context) {
    return AlertDialog(
      backgroundColor: const Color.fromARGB(255, 87, 129, 99),
      content: SizedBox(
        width: MediaQuery.of(context).size.width,
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          mainAxisAlignment: MainAxisAlignment.start,
          children: [
            // Add user information here
            Container(
              width: 500,
              height: 70,
              decoration: const BoxDecoration(
                color: Colors.white,
                borderRadius: BorderRadius.all(
                  Radius.circular(10.0),
                ),
              ),
              child: Row(
                children: [
                  const Padding(
                    padding: EdgeInsets.only(left: 10.0),
                    child: Icon(
                      Icons.account_circle,
                      size: 50,
                      color: Colors.grey,
                    ),
                  ),
                  Padding(
                    padding: const EdgeInsets.only(left: 10.0),
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          'Profile: $username',
                          style: const TextStyle(
                            fontSize: 15,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        Text(
                          'Email: $email',
                          style: const TextStyle(
                            fontSize: 10,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),

            // Add QR codes generated by the user here
            const Padding(
              padding: EdgeInsets.only(top: 40.0, bottom: 10.0),
              child: Text(
                'Your registered parcels',
                style: TextStyle(fontSize: 15),
              ),
            ),

            // Add QR codes here
            Consumer<QRCodeProvider>(
              builder: (context, qrCodeProvider, child) {
                List<QRCodeData> generatedQRCodes =
                    qrCodeProvider.generatedQRCodes;

                return Column(
                  children: [
                    for (var qrCodeData in generatedQRCodes)
                      Container(
                        margin: const EdgeInsets.symmetric(vertical: 10),
                        decoration: BoxDecoration(
                          color: Colors.white,
                          borderRadius: BorderRadius.circular(10),
                        ),
                        height: 80,
                        child: Stack(
                          alignment: Alignment.center,
                          children: [
                            Row(
                              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                              children: [
                                GestureDetector(
                                  onTap: () {
                                    showIDDialog(context, qrCodeData.id);
                                  },
                                  child: Container(
                                    width: 95,
                                    height: 60,
                                    decoration: BoxDecoration(
                                      color: const Color.fromARGB(
                                          255, 91, 115, 128),
                                      borderRadius: BorderRadius.circular(15),
                                    ),
                                    child: const Column(
                                      mainAxisAlignment:
                                          MainAxisAlignment.center,
                                      children: [
                                        Text(
                                          'Unique parcel ID',
                                          style: TextStyle(
                                              color: Colors.white,
                                              fontSize: 10,
                                              fontWeight: FontWeight.bold),
                                          textAlign: TextAlign.center,
                                        ),
                                        Text(
                                          'Tap to see it',
                                          style: TextStyle(
                                              color: Colors.white,
                                              fontSize: 10),
                                          textAlign: TextAlign.center,
                                        ),
                                      ],
                                    ),
                                  ),
                                ),
                                Container(
                                  width: 70,
                                  height: 60,
                                  decoration: BoxDecoration(
                                    color: const Color.fromARGB(200, 0, 0, 0),
                                    borderRadius: BorderRadius.circular(15),
                                  ),
                                  child: Center(
                                    child: Text(
                                      qrCodeData.size,
                                      style: const TextStyle(
                                          color: Colors.white,
                                          fontWeight: FontWeight.bold),
                                    ),
                                  ),
                                ),
                                GestureDetector(
                                  onTap: () {
                                    showQRCodeDialog(
                                        context, qrCodeData.qrCode);
                                  },
                                  child: Container(
                                    width: 95,
                                    height: 60,
                                    decoration: BoxDecoration(
                                      color: const Color.fromARGB(
                                          255, 91, 115, 128),
                                      borderRadius: BorderRadius.circular(15),
                                    ),
                                    child: const Column(
                                      mainAxisAlignment:
                                          MainAxisAlignment.center,
                                      children: [
                                        Text(
                                          'Tap to see QR code',
                                          style: TextStyle(
                                              color: Colors.white,
                                              fontSize: 10,
                                              fontWeight: FontWeight.bold),
                                          textAlign: TextAlign.center,
                                        ),
                                        Icon(
                                          Icons.qr_code_2_rounded,
                                          color: Colors.white,
                                        ),
                                      ],
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Positioned(
                              top: -16,
                              right: -16,
                              child: IconButton(
                                icon: const Icon(
                                  Icons.remove_circle_outline_outlined,
                                  size: 20,
                                ),
                                onPressed: () {
                                  // Handle the removal of the QR code
                                  setState(() {
                                    generatedQRCodes.remove(qrCodeData);
                                  });
                                },
                              ),
                            ),
                          ],
                        ),
                      ),
                  ],
                );
              },
            ),
          ],
        ),
      ),
      actions: [
        ElevatedButton(
          onPressed: () {
            Navigator.pop(context);
          },
          child: const Text('Close'),
        ),
      ],
      insetPadding: const EdgeInsets.only(
        left: 20,
        right: 20,
        top: 50,
        bottom: 20,
      ),
    );
  }

  void showQRCodeDialog(BuildContext context, QrImageView qrCode) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: const Text(
            'QR Code',
            textAlign: TextAlign.center,
          ),
          content: Container(
            width: 250,
            height: 250,
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                qrCode,
                const Padding(
                  padding: EdgeInsets.only(top: 20.0),
                  child: Text(
                    'Scan this QR code in the bus to return your parcel',
                    textAlign: TextAlign.center,
                  ),
                )
              ],
            ),
            //children: [qrCode],
          ),
          actions: [
            ElevatedButton(
              onPressed: () {
                Navigator.pop(context); // Close the dialog
              },
              child: const Text('Close'),
            ),
          ],
        );
      },
    );
  }

  void showIDDialog(BuildContext context, String id) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: const Text(
            'Parcel ID',
            textAlign: TextAlign.center,
          ),
          content: Container(
            width: 250,
            height: 150,
            child: Column(
              mainAxisAlignment: MainAxisAlignment.start,
              children: [
                const Padding(
                  padding: EdgeInsets.only(top: 10.0, bottom: 20.0),
                  child: Text(
                    'This ID uniquely identifies your parcel',
                    textAlign: TextAlign.center,
                  ),
                ),
                Text(
                  id,
                  textAlign: TextAlign.center,
                  style: const TextStyle(
                      fontSize: 18, fontWeight: FontWeight.bold),
                ),
              ],
            ),
            //children: [qrCode],
          ),
          actions: [
            ElevatedButton(
              onPressed: () {
                Navigator.pop(context); // Close the dialog
              },
              child: const Text('Close'),
            ),
          ],
        );
      },
    );
  }
}
